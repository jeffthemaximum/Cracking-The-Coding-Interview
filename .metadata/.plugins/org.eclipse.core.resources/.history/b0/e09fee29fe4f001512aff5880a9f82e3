package two_seven;

public class Node {
	int data;
	Node next = null;
	
	public Node (int d) {
		data = d;
	}
	
	public void appendToAll(int d) {
		Node end = new Node(d);
		Node n = this;
		while (n.next != null) {
			n = n.next;
		}
		n.next = end;
	}
	
	public Node deleteFromList(Node n, int d) {
		if (n.data == d) {
			return n.next;
		}
		
		while (n.next != null) {
			if (n.next.data == d) {
				n.next = n.next.next;
				return n;
			}
			n = n.next;
		}
		return n;
	}
	
	public Node reverseList(Node n) {
		Node prevNode, currNode, nextNode;
		prevNode = null;
		currNode = n;
		nextNode = null;
		
		while (currNode.next != null) {
			nextNode = currNode.next;
			currNode.next = prevNode;
			prevNode = currNode;
			currNode = nextNode;
		}
		currNode.next = prevNode;
		return currNode;
	}
	
	public static boolean compareTwoLists(Node ll1, Node ll2){
		while (ll1 != null || ll2 != null) {
			if (ll1.data != ll2.data) {
				return false;
			} else {
				ll1 = ll1.next;
				ll2 = ll2.next;
			}
		}
		return true;
	}
	
	public static void printList(Node n) {
		while (n != null) {
			System.out.println(n.data);
			n = n.next;
		}
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Node head = new Node(1);
		head.appendToAll(2);
		head.appendToAll(3);
		head.appendToAll(2);
		head.appendToAll(1);
		printList(head);
		Node reversed = head.reverseList(head);
		printList(reversed);
		System.out.println(compareTwoLists(head, reversed));
	}

}
